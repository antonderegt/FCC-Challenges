{"version":3,"sources":["webpack:///static/js/app.a2369cd3e80430bc5133.js","webpack:///./src/App.vue?35a7","webpack:///App.vue","webpack:///Hello.vue","webpack:///./src/components/Hello.vue?2a6f","webpack:///./src/App.vue?75c1","webpack:///./src/components/Hello.vue?43e0","webpack:///../~/d3/build/d3.js","webpack:///./src/main.js"],"names":["webpackJsonp","module","exports","__webpack_require__","Component","__webpack_exports__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__components_Hello__","__WEBPACK_IMPORTED_MODULE_0__components_Hello___default","n","name","components","Hello","a","__WEBPACK_IMPORTED_MODULE_0_d3__","data","msg","mounted","dataset","w","h","padding","xScale","domain","d","split","range","yScale","yScaleAxis","svg","append","attr","text","tooltip","selectAll","enter","year","parseInt","on","style","html","pageY","pageX","xAxis","call","yAxis","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","global","factory","ascendingComparator","f","x","ascending","pair","b","tickStep","start","stop","count","step0","Math","abs","max","step1","pow","floor","log","LN10","error","e10","e5","e2","length","translateX","translateY","y","center","scale","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","format","tickFormat","identity$1","spacing","tickSizeInner","tickPadding","range0","range1","position","copy","selection","path","tick","order","tickExit","exit","tickEnter","line","select","merge","insert","k","top","bottom","transition","epsilon","isFinite","transform","getAttribute","p","parentNode","remove","left","right","tickSizeOuter","filter","each","_","arguments","slice$1","slice","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","t","i","Error","Dispatch","parseTypenames","typenames","types","trim","map","indexOf","hasOwnProperty","type","get","c","set","callback","noop","concat","push","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","o","j","m","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window$$1","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","root","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","prototype","create","Color","color","toLowerCase","reHex3","exec","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","s","l","Hsl","hslConvert","min","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","defaultView","getComputedStyle","getPropertyValue","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","end","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","Infinity","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","width","height","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","property","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","object","isArray","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","next","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","undefined","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","step","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","d3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","date","Date","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","locale","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatYear","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","point$2","bezierCurveTo","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","version","hi","mid","ascendingBisect","bisectLeft","pairs","cross","ia","ib","ic","na","nb","descending","number","variance","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","mean","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","classed","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","container","mousemoved","mouseupped","mousemoving","gestures","touches$$1","sublisteners","define","darker","brighter","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","PI","Kn","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","requestAnimationFrame","TypeError","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","epsilon$1","tauEpsilon","moveTo","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","buffer","argv","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","link","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","x$$1","y$$1","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","precisionFixed","precisionPrefix","precisionRound","temp","valueOf","epsilon2$1","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","uniform","mu","sigma","logNormal","randomNormal","irwinHall","bates","randomIrwinHall","exponential$1","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","durationSecond$1","durationHour$1","durationDay$1","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","isoSpecifier","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","constant$10","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","slice$5","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","noevent$2","zoom","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","scaleExtent","translateExtent","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","randomUniform","randomLogNormal","randomBates","randomExponential","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSecond","timeSeconds","utcSecond","utcSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeek","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1__App__","__WEBPACK_IMPORTED_MODULE_1__App___default","config","productionTip","el","template","App"],"mappings":"AAAAA,cAAc,EAAE,IACT,CAED,SAAUC,EAAQC,EAASC,GCDjCA,EAAA,EAEA,IAAAC,GAAAD,EAAA,GAEAA,EAAA,GAEAA,EAAA,GAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDSO,CAED,SAAUD,EAAQI,EAAqBF,GAE7C,YACAG,QAAOC,eAAeF,EAAqB,cAAgBG,OAAO,GAC7C,IAAIC,GAAkDN,EAAoB,GACtEO,EAA0DP,EAAoBQ,EAAEF,EEtBzGJ,GAAA,SF4BEO,KE1BF,MF2BEC,YExBFC,MAAAJ,EAAAK,KF+BM,SAAUd,EAAQI,EAAqBF,GAE7C,YACAG,QAAOC,eAAeF,EAAqB,cAAgBG,OAAO,GAC7C,IAAIQ,GAAmCb,EAAoB,GACZA,GAAoBQ,EAAEK,EG5C1FX,GAAA,SHkDEO,KGhDF,QHiDEK,KAAM,WACJ,OACEC,IG/CN,8BHkDEC,QAAS,WACP,GAAIC,KG9CR,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,MAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,MAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,MAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,MAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,MAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,QAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,OAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,SAEA,aAEA,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","file":"static/js/app.a2369cd3e80430bc5133.js","sourcesContent":["webpackJsonp([0,2],[\n/* 0 */,\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(5)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(3),\n  /* template */\n  __webpack_require__(8),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Hello__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Hello___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_Hello__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'app',\n  components: {\n    Hello: __WEBPACK_IMPORTED_MODULE_0__components_Hello___default.a\n  }\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n  name: 'hello',\n  data: function data() {\n    return {\n      msg: 'Welcome to our Vue.js App'\n    };\n  },\n  mounted: function mounted() {\n    var dataset = [[\"1947-01-01\", 243.1], [\"1947-04-01\", 246.3], [\"1947-07-01\", 250.1], [\"1947-10-01\", 260.3], [\"1948-01-01\", 266.2], [\"1948-04-01\", 272.9], [\"1948-07-01\", 279.5], [\"1948-10-01\", 280.7], [\"1949-01-01\", 275.4], [\"1949-04-01\", 271.7], [\"1949-07-01\", 273.3], [\"1949-10-01\", 271], [\"1950-01-01\", 281.2], [\"1950-04-01\", 290.7], [\"1950-07-01\", 308.5], [\"1950-10-01\", 320.3], [\"1951-01-01\", 336.4], [\"1951-04-01\", 344.5], [\"1951-07-01\", 351.8], [\"1951-10-01\", 356.6], [\"1952-01-01\", 360.2], [\"1952-04-01\", 361.4], [\"1952-07-01\", 368.1], [\"1952-10-01\", 381.2], [\"1953-01-01\", 388.5], [\"1953-04-01\", 392.3], [\"1953-07-01\", 391.7], [\"1953-10-01\", 386.5], [\"1954-01-01\", 385.9], [\"1954-04-01\", 386.7], [\"1954-07-01\", 391.6], [\"1954-10-01\", 400.3], [\"1955-01-01\", 413.8], [\"1955-04-01\", 422.2], [\"1955-07-01\", 430.9], [\"1955-10-01\", 437.8], [\"1956-01-01\", 440.5], [\"1956-04-01\", 446.8], [\"1956-07-01\", 452], [\"1956-10-01\", 461.3], [\"1957-01-01\", 470.6], [\"1957-04-01\", 472.8], [\"1957-07-01\", 480.3], [\"1957-10-01\", 475.7], [\"1958-01-01\", 468.4], [\"1958-04-01\", 472.8], [\"1958-07-01\", 486.7], [\"1958-10-01\", 500.4], [\"1959-01-01\", 511.1], [\"1959-04-01\", 524.2], [\"1959-07-01\", 525.2], [\"1959-10-01\", 529.3], [\"1960-01-01\", 543.3], [\"1960-04-01\", 542.7], [\"1960-07-01\", 546], [\"1960-10-01\", 541.1], [\"1961-01-01\", 545.9], [\"1961-04-01\", 557.4], [\"1961-07-01\", 568.2], [\"1961-10-01\", 581.6], [\"1962-01-01\", 595.2], [\"1962-04-01\", 602.6], [\"1962-07-01\", 609.6], [\"1962-10-01\", 613.1], [\"1963-01-01\", 622.7], [\"1963-04-01\", 631.8], [\"1963-07-01\", 645], [\"1963-10-01\", 654.8], [\"1964-01-01\", 671.1], [\"1964-04-01\", 680.8], [\"1964-07-01\", 692.8], [\"1964-10-01\", 698.4], [\"1965-01-01\", 719.2], [\"1965-04-01\", 732.4], [\"1965-07-01\", 750.2], [\"1965-10-01\", 773.1], [\"1966-01-01\", 797.3], [\"1966-04-01\", 807.2], [\"1966-07-01\", 820.8], [\"1966-10-01\", 834.9], [\"1967-01-01\", 846], [\"1967-04-01\", 851.1], [\"1967-07-01\", 866.6], [\"1967-10-01\", 883.2], [\"1968-01-01\", 911.1], [\"1968-04-01\", 936.3], [\"1968-07-01\", 952.3], [\"1968-10-01\", 970.1], [\"1969-01-01\", 995.4], [\"1969-04-01\", 1011.4], [\"1969-07-01\", 1032], [\"1969-10-01\", 1040.7], [\"1970-01-01\", 1053.5], [\"1970-04-01\", 1070.1], [\"1970-07-01\", 1088.5], [\"1970-10-01\", 1091.5], [\"1971-01-01\", 1137.8], [\"1971-04-01\", 1159.4], [\"1971-07-01\", 1180.3], [\"1971-10-01\", 1193.6], [\"1972-01-01\", 1233.8], [\"1972-04-01\", 1270.1], [\"1972-07-01\", 1293.8], [\"1972-10-01\", 1332], [\"1973-01-01\", 1380.7], [\"1973-04-01\", 1417.6], [\"1973-07-01\", 1436.8], [\"1973-10-01\", 1479.1], [\"1974-01-01\", 1494.7], [\"1974-04-01\", 1534.2], [\"1974-07-01\", 1563.4], [\"1974-10-01\", 1603], [\"1975-01-01\", 1619.6], [\"1975-04-01\", 1656.4], [\"1975-07-01\", 1713.8], [\"1975-10-01\", 1765.9], [\"1976-01-01\", 1824.5], [\"1976-04-01\", 1856.9], [\"1976-07-01\", 1890.5], [\"1976-10-01\", 1938.4], [\"1977-01-01\", 1992.5], [\"1977-04-01\", 2060.2], [\"1977-07-01\", 2122.4], [\"1977-10-01\", 2168.7], [\"1978-01-01\", 2208.7], [\"1978-04-01\", 2336.6], [\"1978-07-01\", 2398.9], [\"1978-10-01\", 2482.2], [\"1979-01-01\", 2531.6], [\"1979-04-01\", 2595.9], [\"1979-07-01\", 2670.4], [\"1979-10-01\", 2730.7], [\"1980-01-01\", 2796.5], [\"1980-04-01\", 2799.9], [\"1980-07-01\", 2860], [\"1980-10-01\", 2993.5], [\"1981-01-01\", 3131.8], [\"1981-04-01\", 3167.3], [\"1981-07-01\", 3261.2], [\"1981-10-01\", 3283.5], [\"1982-01-01\", 3273.8], [\"1982-04-01\", 3331.3], [\"1982-07-01\", 3367.1], [\"1982-10-01\", 3407.8], [\"1983-01-01\", 3480.3], [\"1983-04-01\", 3583.8], [\"1983-07-01\", 3692.3], [\"1983-10-01\", 3796.1], [\"1984-01-01\", 3912.8], [\"1984-04-01\", 4015], [\"1984-07-01\", 4087.4], [\"1984-10-01\", 4147.6], [\"1985-01-01\", 4237], [\"1985-04-01\", 4302.3], [\"1985-07-01\", 4394.6], [\"1985-10-01\", 4453.1], [\"1986-01-01\", 4516.3], [\"1986-04-01\", 4555.2], [\"1986-07-01\", 4619.6], [\"1986-10-01\", 4669.4], [\"1987-01-01\", 4736.2], [\"1987-04-01\", 4821.5], [\"1987-07-01\", 4900.5], [\"1987-10-01\", 5022.7], [\"1988-01-01\", 5090.6], [\"1988-04-01\", 5207.7], [\"1988-07-01\", 5299.5], [\"1988-10-01\", 5412.7], [\"1989-01-01\", 5527.4], [\"1989-04-01\", 5628.4], [\"1989-07-01\", 5711.6], [\"1989-10-01\", 5763.4], [\"1990-01-01\", 5890.8], [\"1990-04-01\", 5974.7], [\"1990-07-01\", 6029.5], [\"1990-10-01\", 6023.3], [\"1991-01-01\", 6054.9], [\"1991-04-01\", 6143.6], [\"1991-07-01\", 6218.4], [\"1991-10-01\", 6279.3], [\"1992-01-01\", 6380.8], [\"1992-04-01\", 6492.3], [\"1992-07-01\", 6586.5], [\"1992-10-01\", 6697.6], [\"1993-01-01\", 6748.2], [\"1993-04-01\", 6829.6], [\"1993-07-01\", 6904.2], [\"1993-10-01\", 7032.8], [\"1994-01-01\", 7136.3], [\"1994-04-01\", 7269.8], [\"1994-07-01\", 7352.3], [\"1994-10-01\", 7476.7], [\"1995-01-01\", 7545.3], [\"1995-04-01\", 7604.9], [\"1995-07-01\", 7706.5], [\"1995-10-01\", 7799.5], [\"1996-01-01\", 7893.1], [\"1996-04-01\", 8061.5], [\"1996-07-01\", 8159], [\"1996-10-01\", 8287.1], [\"1997-01-01\", 8402.1], [\"1997-04-01\", 8551.9], [\"1997-07-01\", 8691.8], [\"1997-10-01\", 8788.3], [\"1998-01-01\", 8889.7], [\"1998-04-01\", 8994.7], [\"1998-07-01\", 9146.5], [\"1998-10-01\", 9325.7], [\"1999-01-01\", 9447.1], [\"1999-04-01\", 9557], [\"1999-07-01\", 9712.3], [\"1999-10-01\", 9926.1], [\"2000-01-01\", 10031], [\"2000-04-01\", 10278.3], [\"2000-07-01\", 10357.4], [\"2000-10-01\", 10472.3], [\"2001-01-01\", 10508.1], [\"2001-04-01\", 10638.4], [\"2001-07-01\", 10639.5], [\"2001-10-01\", 10701.3], [\"2002-01-01\", 10834.4], [\"2002-04-01\", 10934.8], [\"2002-07-01\", 11037.1], [\"2002-10-01\", 11103.8], [\"2003-01-01\", 11230.1], [\"2003-04-01\", 11370.7], [\"2003-07-01\", 11625.1], [\"2003-10-01\", 11816.8], [\"2004-01-01\", 11988.4], [\"2004-04-01\", 12181.4], [\"2004-07-01\", 12367.7], [\"2004-10-01\", 12562.2], [\"2005-01-01\", 12813.7], [\"2005-04-01\", 12974.1], [\"2005-07-01\", 13205.4], [\"2005-10-01\", 13381.6], [\"2006-01-01\", 13648.9], [\"2006-04-01\", 13799.8], [\"2006-07-01\", 13908.5], [\"2006-10-01\", 14066.4], [\"2007-01-01\", 14233.2], [\"2007-04-01\", 14422.3], [\"2007-07-01\", 14569.7], [\"2007-10-01\", 14685.3], [\"2008-01-01\", 14668.4], [\"2008-04-01\", 14813], [\"2008-07-01\", 14843], [\"2008-10-01\", 14549.9], [\"2009-01-01\", 14383.9], [\"2009-04-01\", 14340.4], [\"2009-07-01\", 14384.1], [\"2009-10-01\", 14566.5], [\"2010-01-01\", 14681.1], [\"2010-04-01\", 14888.6], [\"2010-07-01\", 15057.7], [\"2010-10-01\", 15230.2], [\"2011-01-01\", 15238.4], [\"2011-04-01\", 15460.9], [\"2011-07-01\", 15587.1], [\"2011-10-01\", 15785.3], [\"2012-01-01\", 15973.9], [\"2012-04-01\", 16121.9], [\"2012-07-01\", 16227.9], [\"2012-10-01\", 16297.3], [\"2013-01-01\", 16440.7], [\"2013-04-01\", 16526.8], [\"2013-07-01\", 16727.5], [\"2013-10-01\", 16957.6], [\"2014-01-01\", 16984.3], [\"2014-04-01\", 17270], [\"2014-07-01\", 17522.1], [\"2014-10-01\", 17615.9], [\"2015-01-01\", 17649.3], [\"2015-04-01\", 17913.7], [\"2015-07-01\", 18064.7]];\n    var w = 1000;\n    var h = 500;\n    var padding = 50;\n\n    var xScale = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scaleLinear\"]().domain([1947, __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](dataset, function (d) {\n      return d[0].split('-')[0];\n    })]).range([padding, w - padding]);\n\n    var yScale = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scaleLinear\"]().domain([0, __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](dataset, function (d) {\n      return d[1];\n    })]).range([padding, h - padding]);\n\n    var yScaleAxis = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scaleLinear\"]().domain([0, __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](dataset, function (d) {\n      return d[1];\n    })]).range([h - padding, padding]);\n\n    var svg = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"]('body').append('svg').attr('width', w).attr('height', h);\n\n    svg.append(\"text\").attr(\"x\", 500).attr(\"y\", 100).attr(\"text-anchor\", \"middle\").attr('class', 'title').text(\"Gross Domestic Product\");\n\n    var tooltip = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"]('body').append('div').attr('class', 'tooltip');\n\n    svg.selectAll('rect').data(dataset).enter().append('rect').attr('x', function (d) {\n      var year = d[0].split('-')[0];\n      year = parseInt(year);\n      switch (d[0].split('-')[1]) {\n        case '01':\n          break;\n        case '04':\n          year += .25;\n          break;\n        case '07':\n          year += .50;\n          break;\n        case '10':\n          year += .75;\n          break;\n        default:\n      }\n      return xScale(year);\n    }).attr('width', 4).attr('y', function (d) {\n      return h - yScale(d[1]);\n    }).attr('height', function (d) {\n      return yScale(d[1]) - padding;\n    }).attr('class', 'bar').on('mouseover', function (d) {\n      tooltip.style('visibility', 'visible');\n      tooltip.html('<b>$' + d[1] + ' Billion</b><br /> ' + d[0]);\n    }).on('mousemove', function (d) {\n      tooltip.style('top', __WEBPACK_IMPORTED_MODULE_0_d3__[\"event\"].pageY - 50 + 'px').style('left', __WEBPACK_IMPORTED_MODULE_0_d3__[\"event\"].pageX + 5 + 'px');\n    }).on('mouseout', function () {\n      return tooltip.style('visibility', 'hidden');\n    });\n\n    var xAxis = __WEBPACK_IMPORTED_MODULE_0_d3__[\"axisBottom\"](xScale);\n\n    svg.append('g').attr('transform', 'translate(0,' + (h - padding) + ')').call(xAxis);\n\n    var yAxis = __WEBPACK_IMPORTED_MODULE_0_d3__[\"axisLeft\"](yScaleAxis);\n\n    svg.append('g').attr('transform', 'translate(' + padding + ', 0)').call(yAxis);\n  }\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(6)\n\nvar Component = __webpack_require__(0)(\n  /* script */\n  __webpack_require__(4),\n  /* template */\n  __webpack_require__(9),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('hello')], 1)\n},staticRenderFns: []}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c(\"div\")\n},staticRenderFns: []}\n\n/***/ }),\n/* 10 */,\n/* 11 */,\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__App___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__App__);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].config.productionTip = false;\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */]({\n  el: '#app',\n  template: '<App/>',\n  components: { App: __WEBPACK_IMPORTED_MODULE_1__App___default.a }\n});\n\n/***/ })\n],[13]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.a2369cd3e80430bc5133.js","\n/* styles */\nrequire(\"!!../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-1b5a8900\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n\nvar Component = require(\"!../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"),\n  /* template */\n  require(\"!!../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-1b5a8900\\\"}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 1\n// module chunks = 0","<template>\n  <div id=\"app\">\n    <hello></hello>\n  </div>\n</template>\n\n<script>\nimport Hello from './components/Hello'\n\nexport default {\n  name: 'app',\n  components: {\n    Hello\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// App.vue?16fb9b42","<template>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'hello',\n  data () {\n    return {\n      msg: 'Welcome to our Vue.js App'\n    }\n  },\n  mounted () {\n    const dataset = [\n      [\n      \"1947-01-01\",\n      243.1\n    ],\n    [\n      \"1947-04-01\",\n      246.3\n    ],\n    [\n      \"1947-07-01\",\n      250.1\n    ],\n    [\n      \"1947-10-01\",\n      260.3\n    ],\n    [\n      \"1948-01-01\",\n      266.2\n    ],\n    [\n      \"1948-04-01\",\n      272.9\n    ],\n    [\n      \"1948-07-01\",\n      279.5\n    ],\n    [\n      \"1948-10-01\",\n      280.7\n    ],\n    [\n      \"1949-01-01\",\n      275.4\n    ],\n    [\n      \"1949-04-01\",\n      271.7\n    ],\n    [\n      \"1949-07-01\",\n      273.3\n    ],\n    [\n      \"1949-10-01\",\n      271\n    ],\n    [\n      \"1950-01-01\",\n      281.2\n    ],\n    [\n      \"1950-04-01\",\n      290.7\n    ],\n    [\n      \"1950-07-01\",\n      308.5\n    ],\n    [\n      \"1950-10-01\",\n      320.3\n    ],\n    [\n      \"1951-01-01\",\n      336.4\n    ],\n    [\n      \"1951-04-01\",\n      344.5\n    ],\n    [\n      \"1951-07-01\",\n      351.8\n    ],\n    [\n      \"1951-10-01\",\n      356.6\n    ],\n    [\n      \"1952-01-01\",\n      360.2\n    ],\n    [\n      \"1952-04-01\",\n      361.4\n    ],\n    [\n      \"1952-07-01\",\n      368.1\n    ],\n    [\n      \"1952-10-01\",\n      381.2\n    ],\n    [\n      \"1953-01-01\",\n      388.5\n    ],\n    [\n      \"1953-04-01\",\n      392.3\n    ],\n    [\n      \"1953-07-01\",\n      391.7\n    ],\n    [\n      \"1953-10-01\",\n      386.5\n    ],\n    [\n      \"1954-01-01\",\n      385.9\n    ],\n    [\n      \"1954-04-01\",\n      386.7\n    ],\n    [\n      \"1954-07-01\",\n      391.6\n    ],\n    [\n      \"1954-10-01\",\n      400.3\n    ],\n    [\n      \"1955-01-01\",\n      413.8\n    ],\n    [\n      \"1955-04-01\",\n      422.2\n    ],\n    [\n      \"1955-07-01\",\n      430.9\n    ],\n    [\n      \"1955-10-01\",\n      437.8\n    ],\n    [\n      \"1956-01-01\",\n      440.5\n    ],\n    [\n      \"1956-04-01\",\n      446.8\n    ],\n    [\n      \"1956-07-01\",\n      452\n    ],\n    [\n      \"1956-10-01\",\n      461.3\n    ],\n    [\n      \"1957-01-01\",\n      470.6\n    ],\n    [\n      \"1957-04-01\",\n      472.8\n    ],\n    [\n      \"1957-07-01\",\n      480.3\n    ],\n    [\n      \"1957-10-01\",\n      475.7\n    ],\n    [\n      \"1958-01-01\",\n      468.4\n    ],\n    [\n      \"1958-04-01\",\n      472.8\n    ],\n    [\n      \"1958-07-01\",\n      486.7\n    ],\n    [\n      \"1958-10-01\",\n      500.4\n    ],\n    [\n      \"1959-01-01\",\n      511.1\n    ],\n    [\n      \"1959-04-01\",\n      524.2\n    ],\n    [\n      \"1959-07-01\",\n      525.2\n    ],\n    [\n      \"1959-10-01\",\n      529.3\n    ],\n    [\n      \"1960-01-01\",\n      543.3\n    ],\n    [\n      \"1960-04-01\",\n      542.7\n    ],\n    [\n      \"1960-07-01\",\n      546\n    ],\n    [\n      \"1960-10-01\",\n      541.1\n    ],\n    [\n      \"1961-01-01\",\n      545.9\n    ],\n    [\n      \"1961-04-01\",\n      557.4\n    ],\n    [\n      \"1961-07-01\",\n      568.2\n    ],\n    [\n      \"1961-10-01\",\n      581.6\n    ],\n    [\n      \"1962-01-01\",\n      595.2\n    ],\n    [\n      \"1962-04-01\",\n      602.6\n    ],\n    [\n      \"1962-07-01\",\n      609.6\n    ],\n    [\n      \"1962-10-01\",\n      613.1\n    ],\n    [\n      \"1963-01-01\",\n      622.7\n    ],\n    [\n      \"1963-04-01\",\n      631.8\n    ],\n    [\n      \"1963-07-01\",\n      645\n    ],\n    [\n      \"1963-10-01\",\n      654.8\n    ],\n    [\n      \"1964-01-01\",\n      671.1\n    ],\n    [\n      \"1964-04-01\",\n      680.8\n    ],\n    [\n      \"1964-07-01\",\n      692.8\n    ],\n    [\n      \"1964-10-01\",\n      698.4\n    ],\n    [\n      \"1965-01-01\",\n      719.2\n    ],\n    [\n      \"1965-04-01\",\n      732.4\n    ],\n    [\n      \"1965-07-01\",\n      750.2\n    ],\n    [\n      \"1965-10-01\",\n      773.1\n    ],\n    [\n      \"1966-01-01\",\n      797.3\n    ],\n    [\n      \"1966-04-01\",\n      807.2\n    ],\n    [\n      \"1966-07-01\",\n      820.8\n    ],\n    [\n      \"1966-10-01\",\n      834.9\n    ],\n    [\n      \"1967-01-01\",\n      846\n    ],\n    [\n      \"1967-04-01\",\n      851.1\n    ],\n    [\n      \"1967-07-01\",\n      866.6\n    ],\n    [\n      \"1967-10-01\",\n      883.2\n    ],\n    [\n      \"1968-01-01\",\n      911.1\n    ],\n    [\n      \"1968-04-01\",\n      936.3\n    ],\n    [\n      \"1968-07-01\",\n      952.3\n    ],\n    [\n      \"1968-10-01\",\n      970.1\n    ],\n    [\n      \"1969-01-01\",\n      995.4\n    ],\n    [\n      \"1969-04-01\",\n      1011.4\n    ],\n    [\n      \"1969-07-01\",\n      1032\n    ],\n    [\n      \"1969-10-01\",\n      1040.7\n    ],\n    [\n      \"1970-01-01\",\n      1053.5\n    ],\n    [\n      \"1970-04-01\",\n      1070.1\n    ],\n    [\n      \"1970-07-01\",\n      1088.5\n    ],\n    [\n      \"1970-10-01\",\n      1091.5\n    ],\n    [\n      \"1971-01-01\",\n      1137.8\n    ],\n    [\n      \"1971-04-01\",\n      1159.4\n    ],\n    [\n      \"1971-07-01\",\n      1180.3\n    ],\n    [\n      \"1971-10-01\",\n      1193.6\n    ],\n    [\n      \"1972-01-01\",\n      1233.8\n    ],\n    [\n      \"1972-04-01\",\n      1270.1\n    ],\n    [\n      \"1972-07-01\",\n      1293.8\n    ],\n    [\n      \"1972-10-01\",\n      1332\n    ],\n    [\n      \"1973-01-01\",\n      1380.7\n    ],\n    [\n      \"1973-04-01\",\n      1417.6\n    ],\n    [\n      \"1973-07-01\",\n      1436.8\n    ],\n    [\n      \"1973-10-01\",\n      1479.1\n    ],\n    [\n      \"1974-01-01\",\n      1494.7\n    ],\n    [\n      \"1974-04-01\",\n      1534.2\n    ],\n    [\n      \"1974-07-01\",\n      1563.4\n    ],\n    [\n      \"1974-10-01\",\n      1603\n    ],\n    [\n      \"1975-01-01\",\n      1619.6\n    ],\n    [\n      \"1975-04-01\",\n      1656.4\n    ],\n    [\n      \"1975-07-01\",\n      1713.8\n    ],\n    [\n      \"1975-10-01\",\n      1765.9\n    ],\n    [\n      \"1976-01-01\",\n      1824.5\n    ],\n    [\n      \"1976-04-01\",\n      1856.9\n    ],\n    [\n      \"1976-07-01\",\n      1890.5\n    ],\n    [\n      \"1976-10-01\",\n      1938.4\n    ],\n    [\n      \"1977-01-01\",\n      1992.5\n    ],\n    [\n      \"1977-04-01\",\n      2060.2\n    ],\n    [\n      \"1977-07-01\",\n      2122.4\n    ],\n    [\n      \"1977-10-01\",\n      2168.7\n    ],\n    [\n      \"1978-01-01\",\n      2208.7\n    ],\n    [\n      \"1978-04-01\",\n      2336.6\n    ],\n    [\n      \"1978-07-01\",\n      2398.9\n    ],\n    [\n      \"1978-10-01\",\n      2482.2\n    ],\n    [\n      \"1979-01-01\",\n      2531.6\n    ],\n    [\n      \"1979-04-01\",\n      2595.9\n    ],\n    [\n      \"1979-07-01\",\n      2670.4\n    ],\n    [\n      \"1979-10-01\",\n      2730.7\n    ],\n    [\n      \"1980-01-01\",\n      2796.5\n    ],\n    [\n      \"1980-04-01\",\n      2799.9\n    ],\n    [\n      \"1980-07-01\",\n      2860\n    ],\n    [\n      \"1980-10-01\",\n      2993.5\n    ],\n    [\n      \"1981-01-01\",\n      3131.8\n    ],\n    [\n      \"1981-04-01\",\n      3167.3\n    ],\n    [\n      \"1981-07-01\",\n      3261.2\n    ],\n    [\n      \"1981-10-01\",\n      3283.5\n    ],\n    [\n      \"1982-01-01\",\n      3273.8\n    ],\n    [\n      \"1982-04-01\",\n      3331.3\n    ],\n    [\n      \"1982-07-01\",\n      3367.1\n    ],\n    [\n      \"1982-10-01\",\n      3407.8\n    ],\n    [\n      \"1983-01-01\",\n      3480.3\n    ],\n    [\n      \"1983-04-01\",\n      3583.8\n    ],\n    [\n      \"1983-07-01\",\n      3692.3\n    ],\n    [\n      \"1983-10-01\",\n      3796.1\n    ],\n    [\n      \"1984-01-01\",\n      3912.8\n    ],\n    [\n      \"1984-04-01\",\n      4015\n    ],\n    [\n      \"1984-07-01\",\n      4087.4\n    ],\n    [\n      \"1984-10-01\",\n      4147.6\n    ],\n    [\n      \"1985-01-01\",\n      4237\n    ],\n    [\n      \"1985-04-01\",\n      4302.3\n    ],\n    [\n      \"1985-07-01\",\n      4394.6\n    ],\n    [\n      \"1985-10-01\",\n      4453.1\n    ],\n    [\n      \"1986-01-01\",\n      4516.3\n    ],\n    [\n      \"1986-04-01\",\n      4555.2\n    ],\n    [\n      \"1986-07-01\",\n      4619.6\n    ],\n    [\n      \"1986-10-01\",\n      4669.4\n    ],\n    [\n      \"1987-01-01\",\n      4736.2\n    ],\n    [\n      \"1987-04-01\",\n      4821.5\n    ],\n    [\n      \"1987-07-01\",\n      4900.5\n    ],\n    [\n      \"1987-10-01\",\n      5022.7\n    ],\n    [\n      \"1988-01-01\",\n      5090.6\n    ],\n    [\n      \"1988-04-01\",\n      5207.7\n    ],\n    [\n      \"1988-07-01\",\n      5299.5\n    ],\n    [\n      \"1988-10-01\",\n      5412.7\n    ],\n    [\n      \"1989-01-01\",\n      5527.4\n    ],\n    [\n      \"1989-04-01\",\n      5628.4\n    ],\n    [\n      \"1989-07-01\",\n      5711.6\n    ],\n    [\n      \"1989-10-01\",\n      5763.4\n    ],\n    [\n      \"1990-01-01\",\n      5890.8\n    ],\n    [\n      \"1990-04-01\",\n      5974.7\n    ],\n    [\n      \"1990-07-01\",\n      6029.5\n    ],\n    [\n      \"1990-10-01\",\n      6023.3\n    ],\n    [\n      \"1991-01-01\",\n      6054.9\n    ],\n    [\n      \"1991-04-01\",\n      6143.6\n    ],\n    [\n      \"1991-07-01\",\n      6218.4\n    ],\n    [\n      \"1991-10-01\",\n      6279.3\n    ],\n    [\n      \"1992-01-01\",\n      6380.8\n    ],\n    [\n      \"1992-04-01\",\n      6492.3\n    ],\n    [\n      \"1992-07-01\",\n      6586.5\n    ],\n    [\n      \"1992-10-01\",\n      6697.6\n    ],\n    [\n      \"1993-01-01\",\n      6748.2\n    ],\n    [\n      \"1993-04-01\",\n      6829.6\n    ],\n    [\n      \"1993-07-01\",\n      6904.2\n    ],\n    [\n      \"1993-10-01\",\n      7032.8\n    ],\n    [\n      \"1994-01-01\",\n      7136.3\n    ],\n    [\n      \"1994-04-01\",\n      7269.8\n    ],\n    [\n      \"1994-07-01\",\n      7352.3\n    ],\n    [\n      \"1994-10-01\",\n      7476.7\n    ],\n    [\n      \"1995-01-01\",\n      7545.3\n    ],\n    [\n      \"1995-04-01\",\n      7604.9\n    ],\n    [\n      \"1995-07-01\",\n      7706.5\n    ],\n    [\n      \"1995-10-01\",\n      7799.5\n    ],\n    [\n      \"1996-01-01\",\n      7893.1\n    ],\n    [\n      \"1996-04-01\",\n      8061.5\n    ],\n    [\n      \"1996-07-01\",\n      8159\n    ],\n    [\n      \"1996-10-01\",\n      8287.1\n    ],\n    [\n      \"1997-01-01\",\n      8402.1\n    ],\n    [\n      \"1997-04-01\",\n      8551.9\n    ],\n    [\n      \"1997-07-01\",\n      8691.8\n    ],\n    [\n      \"1997-10-01\",\n      8788.3\n    ],\n    [\n      \"1998-01-01\",\n      8889.7\n    ],\n    [\n      \"1998-04-01\",\n      8994.7\n    ],\n    [\n      \"1998-07-01\",\n      9146.5\n    ],\n    [\n      \"1998-10-01\",\n      9325.7\n    ],\n    [\n      \"1999-01-01\",\n      9447.1\n    ],\n    [\n      \"1999-04-01\",\n      9557\n    ],\n    [\n      \"1999-07-01\",\n      9712.3\n    ],\n    [\n      \"1999-10-01\",\n      9926.1\n    ],\n    [\n      \"2000-01-01\",\n      10031\n    ],\n    [\n      \"2000-04-01\",\n      10278.3\n    ],\n    [\n      \"2000-07-01\",\n      10357.4\n    ],\n    [\n      \"2000-10-01\",\n      10472.3\n    ],\n    [\n      \"2001-01-01\",\n      10508.1\n    ],\n    [\n      \"2001-04-01\",\n      10638.4\n    ],\n    [\n      \"2001-07-01\",\n      10639.5\n    ],\n    [\n      \"2001-10-01\",\n      10701.3\n    ],\n    [\n      \"2002-01-01\",\n      10834.4\n    ],\n    [\n      \"2002-04-01\",\n      10934.8\n    ],\n    [\n      \"2002-07-01\",\n      11037.1\n    ],\n    [\n      \"2002-10-01\",\n      11103.8\n    ],\n    [\n      \"2003-01-01\",\n      11230.1\n    ],\n    [\n      \"2003-04-01\",\n      11370.7\n    ],\n    [\n      \"2003-07-01\",\n      11625.1\n    ],\n    [\n      \"2003-10-01\",\n      11816.8\n    ],\n    [\n      \"2004-01-01\",\n      11988.4\n    ],\n    [\n      \"2004-04-01\",\n      12181.4\n    ],\n    [\n      \"2004-07-01\",\n      12367.7\n    ],\n    [\n      \"2004-10-01\",\n      12562.2\n    ],\n    [\n      \"2005-01-01\",\n      12813.7\n    ],\n    [\n      \"2005-04-01\",\n      12974.1\n    ],\n    [\n      \"2005-07-01\",\n      13205.4\n    ],\n    [\n      \"2005-10-01\",\n      13381.6\n    ],\n    [\n      \"2006-01-01\",\n      13648.9\n    ],\n    [\n      \"2006-04-01\",\n      13799.8\n    ],\n    [\n      \"2006-07-01\",\n      13908.5\n    ],\n    [\n      \"2006-10-01\",\n      14066.4\n    ],\n    [\n      \"2007-01-01\",\n      14233.2\n    ],\n    [\n      \"2007-04-01\",\n      14422.3\n    ],\n    [\n      \"2007-07-01\",\n      14569.7\n    ],\n    [\n      \"2007-10-01\",\n      14685.3\n    ],\n    [\n      \"2008-01-01\",\n      14668.4\n    ],\n    [\n      \"2008-04-01\",\n      14813\n    ],\n    [\n      \"2008-07-01\",\n      14843\n    ],\n    [\n      \"2008-10-01\",\n      14549.9\n    ],\n    [\n      \"2009-01-01\",\n      14383.9\n    ],\n    [\n      \"2009-04-01\",\n      14340.4\n    ],\n    [\n      \"2009-07-01\",\n      14384.1\n    ],\n    [\n      \"2009-10-01\",\n      14566.5\n    ],\n    [\n      \"2010-01-01\",\n      14681.1\n    ],\n    [\n      \"2010-04-01\",\n      14888.6\n    ],\n    [\n      \"2010-07-01\",\n      15057.7\n    ],\n    [\n      \"2010-10-01\",\n      15230.2\n    ],\n    [\n      \"2011-01-01\",\n      15238.4\n    ],\n    [\n      \"2011-04-01\",\n      15460.9\n    ],\n    [\n      \"2011-07-01\",\n      15587.1\n    ],\n    [\n      \"2011-10-01\",\n      15785.3\n    ],\n    [\n      \"2012-01-01\",\n      15973.9\n    ],\n    [\n      \"2012-04-01\",\n      16121.9\n    ],\n    [\n      \"2012-07-01\",\n      16227.9\n    ],\n    [\n      \"2012-10-01\",\n      16297.3\n    ],\n    [\n      \"2013-01-01\",\n      16440.7\n    ],\n    [\n      \"2013-04-01\",\n      16526.8\n    ],\n    [\n      \"2013-07-01\",\n      16727.5\n    ],\n    [\n      \"2013-10-01\",\n      16957.6\n    ],\n    [\n      \"2014-01-01\",\n      16984.3\n    ],\n    [\n      \"2014-04-01\",\n      17270\n    ],\n    [\n      \"2014-07-01\",\n      17522.1\n    ],\n    [\n      \"2014-10-01\",\n      17615.9\n    ],\n    [\n      \"2015-01-01\",\n      17649.3\n    ],\n    [\n      \"2015-04-01\",\n      17913.7\n    ],\n    [\n      \"2015-07-01\",\n      18064.7\n    ]\n    ]\n    const w = 1000\n    const h = 500\n    const padding = 50\n\n    const xScale = d3.scaleLinear()\n      .domain([1947, d3.max(dataset, (d) => d[0].split('-')[0])])\n      .range([padding, w - padding])\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(dataset, d => d[1])])\n      .range([padding, h - padding])\n\n    const yScaleAxis = d3.scaleLinear()\n      .domain([0, d3.max(dataset, d => d[1])])\n      .range([h - padding, padding])\n\n    const svg = d3.select('body')\n      .append('svg')\n      .attr('width', w)\n      .attr('height', h)\n\n    svg.append(\"text\")\n        .attr(\"x\", 500)\n        .attr(\"y\", 100)\n        .attr(\"text-anchor\", \"middle\")\n        .attr('class', 'title')\n        .text(\"Gross Domestic Product\");\n\n    const tooltip = d3.select('body')\n      .append('div')\n      .attr('class', 'tooltip')\n\n    svg.selectAll('rect')\n      .data(dataset)\n      .enter()\n      .append('rect')\n      .attr('x', d => {\n        let year = d[0].split('-')[0]\n        year = parseInt(year)\n        switch (d[0].split('-')[1]) {\n          case '01':\n            break;\n          case '04':\n            year += .25\n            break;\n          case '07':\n            year += .50\n            break;\n          case '10':\n            year += .75\n            break;\n          default:\n        }\n        return xScale(year)\n      })\n      .attr('width', 4)\n      .attr('y', d => h - yScale(d[1]))\n      .attr('height', d => yScale(d[1]) - padding)\n      .attr('class', 'bar')\n      .on('mouseover', (d) => {\n        tooltip.style('visibility', 'visible')\n        tooltip.html('<b>$'+d[1] + ' Billion</b><br /> ' + d[0])\n      })\n      .on('mousemove', d => {\n        tooltip.style('top', (d3.event.pageY - 50) + 'px').style('left', (d3.event.pageX + 5) + 'px')\n      })\n      .on('mouseout', () => tooltip.style('visibility', 'hidden'))\n\n    // Axes\n    const xAxis = d3.axisBottom(xScale)\n\n    svg.append('g')\n      .attr('transform', 'translate(0,' + (h - padding) + ')')\n      .call(xAxis)\n\n    const yAxis = d3.axisLeft(yScaleAxis)\n\n    svg.append('g')\n      .attr('transform', 'translate(' + padding + ', 0)')\n      .call(yAxis)\n  }\n}\n</script>\n\n<style>\nbody {\n  display: flex;\n  justify-content: center;\n  margin-top: 8%;\n}\n\nsvg {\n\tbackground: lightGray;\n}\n.bar {\n\tfill: red;\n}\n.bar:hover {\n\tfill: Tomato;\n}\n\n.title {\n  font-size: 24px;\n}\n\n.tooltip {\n  position: absolute;\n  z-index: 10;\n  visibility: hidden;\n  background: gray;\n  border-radius: 5px;\n  padding: 5px;\n  width: 120px;\n  height: 40px;\n}\n\nh1, h2 {\n  font-weight: normal;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// Hello.vue?26313e8a","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-rewriter?{\\\"id\\\":\\\"data-v-1bbfa68a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Hello.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Hello.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler?{\\\"id\\\":\\\"data-v-1bbfa68a\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Hello.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Hello.vue\n// module id = 7\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    attrs: {\n      \"id\": \"app\"\n    }\n  }, [_c('hello')], 1)\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-1b5a8900\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 8\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c(\"div\")\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler.js?{\"id\":\"data-v-1bbfa68a\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hello.vue\n// module id = 9\n// module chunks = 0","// https://d3js.org Version 4.7.2. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.7.2\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(a, b, f) {\n  var na = a.length, nb = b.length, c = new Array(na * nb), ia, ib, ic, va;\n  if (f == null) f = pair;\n  for (ia = ic = 0; ia < na; ++ia) for (va = a[ia], ib = 0; ib < nb; ++ib, ++ic) c[ic] = f(va, b[ib]);\n  return c;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return sequence(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n};\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n};\n\nvar mean = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n};\n\nvar median = function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction center(scale) {\n  var offset = scale.bandwidth() / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\"),\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner)\n        .attr(y + \"1\", 0.5)\n        .attr(y + \"2\", 0.5));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(y, 0.5)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar window = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : window(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n};\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window$$1 = window(node),\n      event = window$$1.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window$$1.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousemoving,\n      touchending;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    mousemoving = true;\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var style = window(this).getComputedStyle(this, null),\n        value0 = style.getPropertyValue(name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    return this._circle = circle$1(_), this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m([0, 0]);\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]\n        : [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  if (!(size >= 1)) throw new Error;\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\" || this._call) throw new Error;\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  return new Queue(arguments.length ? +concurrency : Infinity);\n}\n\nvar uniform = function(min, max) {\n  min = min == null ? 0 : +min;\n  max = max == null ? 1 : +max;\n  if (arguments.length === 1) max = min, min = 0;\n  else max -= min;\n  return function() {\n    return Math.random() * max + min;\n  };\n};\n\nvar normal = function(mu, sigma) {\n  var x, r;\n  mu = mu == null ? 0 : +mu;\n  sigma = sigma == null ? 1 : +sigma;\n  return function() {\n    var y;\n\n    // If available, use the second previously-generated uniform random.\n    if (x != null) y = x, x = null;\n\n    // Otherwise, generate a new x and y.\n    else do {\n      x = Math.random() * 2 - 1;\n      y = Math.random() * 2 - 1;\n      r = x * x + y * y;\n    } while (!r || r > 1);\n\n    return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n  };\n};\n\nvar logNormal = function() {\n  var randomNormal = normal.apply(this, arguments);\n  return function() {\n    return Math.exp(randomNormal());\n  };\n};\n\nvar irwinHall = function(n) {\n  return function() {\n    for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n    return sum;\n  };\n};\n\nvar bates = function(n) {\n  var randomIrwinHall = irwinHall(n);\n  return function() {\n    return randomIrwinHall() / n;\n  };\n};\n\nvar exponential$1 = function(lambda) {\n  return function() {\n    return -Math.log(1 - Math.random()) / lambda;\n  };\n};\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar slice$5 = Array.prototype.slice;\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (var j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this);\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      g.moved = true;\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (!g.touch0) g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = window;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/d3/build/d3.js\n// module id = 12\n// module chunks = 0","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  template: '<App/>',\n  components: { App }\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}